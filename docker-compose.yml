services:
  # Database
  db:
    image: postgres:17.5
    container_name: andy_grails_db_dev
    environment:
      POSTGRES_DB: ${DB_NAME:-andy_grails}
      POSTGRES_USER: ${DB_USER:-andy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-andy}
    ports:
      - '55432:5432'
    volumes:
      - andy_grails_postgres_data_dev:/var/lib/postgresql/data
    networks:
      - andy-network-dev

  # Backend API
  backend:
    image: andygrails/andy-grails-backend:latest
    platform: linux/amd64 # Force x86_64 platform for compatibility
    container_name: andy_grails_backend_dev
    depends_on:
      - db
    ports:
      - '8080:8080'
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-andy_grails}
      DB_USER: ${DB_USER:-andy}
      DB_PASSWORD: ${DB_PASSWORD:-andy}
    networks:
      - andy-network-dev

  # Frontend Angular App (Development with hot reload)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: andy_grails_frontend_dev
    ports:
      - '4200:4200'
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    networks:
      - andy-network-dev
    command: ng serve --host 0.0.0.0 --port 4200 --poll 2000 --disable-host-check

volumes:
  andy_grails_postgres_data_dev:

networks:
  andy-network-dev:
    driver: bridge
