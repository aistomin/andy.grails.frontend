services:
  # Database
  db:
    image: postgres:18
    container_name: andy_grails_db_prod
    environment:
      POSTGRES_DB: ${DB_NAME:-andy_grails}
      POSTGRES_USER: ${DB_USER:-andy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-andy}
    ports:
      - '55432:5432'
    volumes:
      - andy_grails_postgres_data_prod:/var/lib/postgresql
    networks:
      - andy-network-prod

  # Backend API
  backend:
    image: andygrails/andy-grails-backend:latest
    platform: linux/amd64 # Force x86_64 platform for compatibility
    container_name: andy_grails_backend_prod
    depends_on:
      - db
    ports:
      - '8080:8080'
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-andy_grails}
      DB_USER: ${DB_USER:-andy}
      DB_PASSWORD: ${DB_PASSWORD:-andy}
    networks:
      - andy-network-prod

  # Frontend Angular App (Production - built locally)
  frontend-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: andy_grails_frontend_prod
    ports:
      - '4200:80'
    depends_on:
      - backend
    networks:
      - andy-network-prod
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:80/',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  andy_grails_postgres_data_prod:

networks:
  andy-network-prod:
    driver: bridge
